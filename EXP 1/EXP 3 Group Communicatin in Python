# server

import socket

localIP = "127.0.0.1"
localPort = 20001
bufferSize = 1024

UDPServerSocket = socket.socket(family=socket.AF_INET, type=socket.SOCK_DGRAM)
UDPServerSocket.setsockopt(socket.SOL_SOCKET, socket.SO_REUSEADDR, 1)
UDPServerSocket.bind((localIP, localPort))

print("ðŸ”Œ Server is up and listening...")

clients = set()

while True:
    message, address = UDPServerSocket.recvfrom(bufferSize)
    msg = message.decode()

    if address not in clients:
        clients.add(address)

    print(f"ðŸ“¨ From {address}: {msg}")

    for client in clients:
        if client != address:
            UDPServerSocket.sendto(f"{address} says: {msg}".encode(), client)


# enddd  #



# client 1 

import socket
import threading

serverAddressPort = ("127.0.0.1", 20001)
bufferSize = 1024

UDPClientSocket = socket.socket(family=socket.AF_INET, type=socket.SOCK_DGRAM)
UDPClientSocket.bind(('', 0))

def receive_messages():
    while True:
        message, _ = UDPClientSocket.recvfrom(bufferSize)
        print("\nðŸ“© " + message.decode())

threading.Thread(target=receive_messages, daemon=True).start()

print("ðŸ‘¤ Client 1: Start chatting (type 'exit' to quit)")
while True:
    msg = input()
    if msg.lower() == 'exit':
        break
    UDPClientSocket.sendto(msg.encode(), serverAddressPort)



# client 2

import socket
import threading

serverAddressPort = ("127.0.0.1", 20001)
bufferSize = 1024

UDPClientSocket = socket.socket(family=socket.AF_INET, type=socket.SOCK_DGRAM)
UDPClientSocket.bind(('', 0))

def receive_messages():
    while True:
        message, _ = UDPClientSocket.recvfrom(bufferSize)
        print("\nðŸ“© " + message.decode())

threading.Thread(target=receive_messages, daemon=True).start()

print("ðŸ‘¤ Client 2: Start chatting (type 'exit' to quit)")

while True:
    msg = input()
    if msg.lower() == 'exit':
        break
    UDPClientSocket.sendto(msg.encode(), serverAddressPort)

